<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.zjuvipa.compression.backend.mapper.HistoryMapper">
    <insert id="addHistory" parameterType="History">
        insert into history
        values (0,#{historyName},#{algoId},#{algoName},#{username},#{datasetId},#{datasetName},#{modelPath},#{dateTime})
    </insert>
<!--    and (morfPath='leaderboard' or morfPath='pruning task' or morfPath='upload task')-->
    <select id="findHistoriesByUserNew" resultType="Info">
        select * from infos
        where username=#{username};
    </select>
    <select id="findHistoriesByUser" resultType="History">
        select * from history
        <where>
            <if test="model != null and model != ''">
                and model_name like concat('%',#{model},'%')
            </if>
            <if test="type != null and type != ''">
                and task_type = #{type}
            </if>
            <if test="client != null and client != ''">
                and client = #{client}
            </if>
            <if test="createTimeBegin != null and createTimeBegin != ''">
                and submit_time >= #{createTimeBegin}
            </if>
            <if test="createTimeEnd != null and createTimeEnd != ''">
                and submit_time &lt;= #{createTimeEnd}
            </if>
            and username=#{username}
        </where>
        order by history_id DESC
    </select>
    <select id="findHistories" resultType="History">
        select * from history
        <where>
            <if test="model != null and model != ''">
                and model_name like concat('%',#{model},'%')
            </if>
            <if test="type != null and type != ''">
                and task_type = #{type}
            </if>
            <if test="client != null and client != ''">
                and client = #{client}
            </if>
            <if test="createTimeBegin != null and createTimeBegin != ''">
                and submit_time >= #{createTimeBegin}
            </if>
            <if test="createTimeEnd != null and createTimeEnd != ''">
                and submit_time &lt;= #{createTimeEnd}
            </if>
        </where>
        order by history_id DESC
    </select>




    <select id="findAllHistories" resultType="Info">
        select * from infos
    </select>
    <insert id="uploadHistory">
        insert into history (model_name, task_type, checkpoint_path, username, submit_time, status, params_change, flops_change, acc_change, loss_change, pruned_path, structure_before_pruned, structure_after_pruned, log_path)
        values (#{modelname}, #{tasktype}, #{checkpointpath}, #{username}, #{submittime}, #{status}, #{paramschange}, #{flopschange}, #{accchange}, #{losschange}, #{prunedpath}, #{structurebeforepruned}, #{structureafterpruned}, #{logpath});
    </insert>
    <insert id="uploadTrainingHistory" keyProperty="historyId" useGeneratedKeys="true">
        insert into history (model_name, task_type, checkpoint_path, username, status, params_change, flops_change, acc_change, loss_change, pruned_path, structure_before_pruned, structure_after_pruned, log_path,
        is_training, tot_epoch, current_epoch, script, client, importance, importance_link, pruner, pruner_link)
        values (#{modelName}, #{taskType}, #{checkpointPath}, #{username}, #{status}, #{paramsChange}, #{flopsChange}, #{accChange}, #{lossChange},
        #{prunedPath}, #{structureBeforePruned}, #{structureAfterPruned}, #{logPath}, #{isTraining}, #{totEpoch}, #{currentEpoch}, #{script}, #{client}, #{importance}, #{importanceLink},
        #{pruner}, #{prunerLink});
    </insert>

<!--    String algoname, String algolink, String sparsename, String sparselink-->

    <insert id="uploadUploadingHistory" keyProperty="historyId" useGeneratedKeys="true">
        insert into history (model_name, task_type, checkpoint_path, username, status, params_change, flops_change, acc_change, loss_change, pruned_path, structure_before_pruned, structure_after_pruned, log_path,
        is_training, tot_epoch, current_epoch, script, client, dataset, usrModelName, importance, importance_link, pruner, pruner_link)
        values (#{modelName}, #{taskType}, #{checkpointPath}, #{username}, #{status}, #{paramsChange}, #{flopsChange}, #{accChange}, #{lossChange},
        #{prunedPath}, #{structureBeforePruned}, #{structureAfterPruned}, #{logPath}, #{isTraining}, #{totEpoch}, #{currentEpoch}, #{script}, #{client}, #{dataset}, #{usrModelName},
        "N/A", "N/A", "N/A", "N/A");
    </insert>
    <select id="findHistoryByName" resultType="History">
        select * from history
        where (username=#{param1} and history_name=#{param2})
    </select>
    <select id="findHistoriesByUserAndAlgo" resultType="History">
        select * from history
        where (username=#{param1} and algo_id=#{param2})
    </select>
    <select id="findHistoriesByUserAndDataset" resultType="History">
        select * from history
        where (username=#{param1} and dataset_id=#{param2})
    </select>
    <select id="findHistoriesByUserAndAlgoAndDataset" resultType="History">
        select * from history
        where (username=#{param1} and algo_id=#{param2} and dataset_id=#{param3})
    </select>
    <delete id="deleteHistory" parameterType="String">
        delete from history
        where username=#{param1} and model_name=#{param2}
    </delete>
    <update id="updateHistory">
        update history
        set history_name=#{param2}
        where history_id=#{param1}
    </update>
    <update id="setStatusWaiting">
        update history
        set status='Waiting'
        where history_id=#{algorithmId}
    </update>
    <update id="setStatusRejected">
        update history
        set status='Rejected'
        where history_id=#{algorithmId}
    </update>

</mapper>
